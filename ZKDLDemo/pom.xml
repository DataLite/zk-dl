
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>cz.datalite.zk</groupId>
    <artifactId>ZKDLDemo</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>ZKDLDemo</name>
    <url>http://zk.datalite.cz</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <org.springframework.version>3.0.4.RELEASE</org.springframework.version>
        <org.springframework.security.version>3.0.3.RELEASE</org.springframework.security.version>
        <org.zkoss.zk.version>5.0.4</org.zkoss.zk.version>
        <cz.datalite.zk-dl.version>0.9-SNAPSHOT</cz.datalite.zk-dl.version>
        <netbeans.hint.deploy.server>liferay</netbeans.hint.deploy.server>
    </properties>

    <dependencies>

		<dependency>
			<groupId>com.liferay.portal</groupId>
			<artifactId>portal-service</artifactId>
			<version>6.0.5</version>
			<scope>provided</scope>
		</dependency>

        <!-- Core utilities used by other modules. Define this if you use Spring
                Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define
                this if you use Spring Bean APIs (org.springframework.beans.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!-- Aspect Oriented Programming (AOP) Framework (depends on core, beans)
                Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!-- Application Context (depends on core, expression, aop, beans) This
                is the central artifact for Spring's Dependency Injection Container and is
                generally always defined -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA,
                and iBatis. (depends on core, beans, context, transaction) Define this if
                you need ORM (org.springframework.orm.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>3.0.3.RELEASE</version>
                <optional>true</optional>
        </dependency>



        <!-- ZK libraries -->
        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zk</artifactId>
            <version>${org.zkoss.zk.version}</version>
        </dependency>
        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zul</artifactId>
            <version>${org.zkoss.zk.version}</version>
        </dependency>
        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zhtml</artifactId>
            <version>${org.zkoss.zk.version}</version>
        </dependency>
        <dependency>
            <groupId>org.zkoss.common</groupId>
            <artifactId>zcommon</artifactId>
            <version>${org.zkoss.zk.version}</version>
        </dependency>
        <dependency>
            <groupId>org.zkoss.common</groupId>
            <artifactId>zweb</artifactId>
            <version>${org.zkoss.zk.version}</version>
        </dependency>
        <dependency>
            <groupId>org.zkoss.zkforge.el</groupId>
            <artifactId>zcommons-el</artifactId>
            <version>1.1.0</version>
        </dependency>



        <!-- DataLite extension libraries -->
        <dependency>
            <groupId>cz.datalite.zk-dl</groupId>
            <artifactId>DLHelpers</artifactId>
            <version>0.9-SNAPSHOT</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>cz.datalite.zk-dl</groupId>
            <artifactId>HibernateDAO</artifactId>
            <version>${cz.datalite.zk-dl.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>cz.datalite.zk-dl</groupId>
            <artifactId>ZKComposer</artifactId>
            <version>${cz.datalite.zk-dl.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>cz.datalite.zk-dl</groupId>
            <artifactId>SpringService</artifactId>
            <version>${cz.datalite.zk-dl.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>cz.datalite.zk-dl</groupId>
            <artifactId>ZKComponents</artifactId>
            <version>${cz.datalite.zk-dl.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>cz.datalite.zk-dl</groupId>
            <artifactId>ZKDLComponents</artifactId>
            <version>${cz.datalite.zk-dl.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>cz.datalite.zk-dl</groupId>
            <artifactId>ZKDLComponentsHibernateExt</artifactId>
            <version>${cz.datalite.zk-dl.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>cz.datalite.zk-dl</groupId>
            <artifactId>ZKLiferay</artifactId>
            <version>${cz.datalite.zk-dl.version}</version>
            <type>jar</type>
        </dependency>


        <!-- Test libraries / JUnit, Spring Test for unit test and Selenium/WebDriver
                for integration tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>

        <!-- Jetty/Tomcat running -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.2.1</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.5.8</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.8</version>
        </dependency>

        <dependency>
            <groupId>org.beanshell</groupId>
            <artifactId>bsh</artifactId>
            <version>2.0b5</version>
        </dependency>

        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.7</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate</artifactId>
            <version>3.2.5.ga</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>3.3.2.GA</version>
        </dependency>
        <dependency>
            <groupId>javax.sql</groupId>
            <artifactId>jdbc-stdext</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.0.1B</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1-alpha-2</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.9</version>
                <configuration>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>9090</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                </configuration>
            </plugin>
                        <plugin>
                          <groupId>org.zeroturnaround</groupId>
                          <artifactId>javarebel-maven-plugin</artifactId>
                          <executions>
                            <execution>
                              <id>generate-rebel-xml</id>
                              <phase>process-resources</phase>
                              <goals>
                                <goal>generate</goal>
                              </goals>
                            </execution>
                          </executions>
                        </plugin>
        </plugins>
    </build>

    <repositories>

        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>http://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>


        <repository>
            <id>jboss</id>
            <name>JBoss</name>
            <url>http://repository.jboss.com/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>zkoss</id>
            <name>ZK Repository</name>
            <url>http://mavensync.zkoss.org/zk/pe-eval</url>
            <snapshots>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>

        <repository>
            <id>codehaus-release-repo</id>
            <name>Codehaus Release Repo</name>
            <url>http://repository.codehaus.org</url>
            <snapshots>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <url>http://download.java.net/maven/2/</url>
            <id>hibernate-support</id>
            <layout>default</layout>
            <name>Repository for library Library[hibernate-support]</name>
        </repository>
    </repositories>

</project>
