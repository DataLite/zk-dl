<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cz.datalite.zk-dl</groupId>
	<artifactId>zk-dl</artifactId>
	<version>1.5.0</version>
	<packaging>pom</packaging>
	<name>DataLite ZKoss framework extension library</name>
	<description>

		Multiple loosely coupled modules which extend ZK framework, originally created by DataLite company.

		ZKComposer - controll the MVC design with annotations &#64;ZkEvent, &#64;ZkComponent, &#64;ZkBinding, ... (similar to
		zkspring or zkcdi projects, however without any framework dependencies).

		ZKDLComponents splits ZK data driven components (listbox, combobox) to MVC design, adds support for easy large
		data manipulation and contains many pre-built user controls (filter manager, sort manager, visible listbox
		columns manager, export to excel, etc.)

		HibernateDAO &amp; ZKDLComponentsHibernateExtensions - Hibernate generic DAO design with extensions for
		ZKDLComponents to replace all your plumbing code (filter, sort, lazy loading, CRUD).

		SpringService - service layer with spring - generic service which speaks to generic DAO. This is the way we use
		our components at DataLite, but you can use any integration or DAO at your will.
	</description>
	<url>http://zk.datalite.cz</url>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/DataLite/zk-dl/issues</url>
	</issueManagement>

	<ciManagement>
		<system>Jenkins</system>
	</ciManagement>

	<scm>
		<connection>scm:git:https://github.com/DataLite/zk-dl.git</connection>
		<url>https://github.com/DataLite/zk-dl</url>
	</scm>

	<organization>
		<name>DataLite</name>
		<url>http://www.datalite.cz</url>
	</organization>

	<!-- Shared version number properties -->
	<properties>
		<java-version>1.8</java-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<netbeans.hint.license>LGPL</netbeans.hint.license>
		<org.zkframework.version>8.0.0.FL.20150504-Eval</org.zkframework.version>
		<org.springframework.version>4.1.6.RELEASE</org.springframework.version>
		<org.springframework.security.version>4.0.1.RELEASE</org.springframework.security.version>
		<org.hibernateframework.version>4.3.10.Final</org.hibernateframework.version>
		<cz.datalite.zk-dl.version>1.5.0</cz.datalite.zk-dl.version>
		<org.slf4j.version>1.7.12</org.slf4j.version>
	</properties>

	<profiles>

		<profile>
			<!-- make a build in development mode -->
			<!-- include rebel.xml to simplify hot redeploys -->
			<id>development</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.zeroturnaround</groupId>
						<artifactId>jrebel-maven-plugin</artifactId>
						<version>1.1.5</version>
						<executions>
							<execution>
								<id>generate-rebel-xml</id>
								<phase>process-resources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<!-- The "release" profile ensures that the source and javadoc JARs are included in deployments -->
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
									<goal>test-jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.10.3</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<!-- JDK8 strict javadoc (http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html) -->
									<additionalparam>-Xdoclint:none</additionalparam>
									<!-- XXX: javadoc: error - com.sun.tools.doclets.internal.toolkit.util.DocletAbortException: com.sun.tools.javac.code.Symbol$CompletionFailure: class file for javax.validation.ConstraintViolation not found -->
									<additionalDependencies>
										<additionnalDependency>
											<groupId>javax.validation</groupId>
											<artifactId>validation-api</artifactId>
											<version>1.0.0.GA</version>
										</additionnalDependency>
									</additionalDependencies>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

		</plugins>


	</build>

	<dependencies>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j.version}</version>
			<type>jar</type>
		</dependency>

	</dependencies>

	<modules>
		<module>zkbind</module>
		<module>zkplus</module>
		<module>HibernateDAO</module>
		<module>ZKComposer</module>
		<module>ZKComponents</module>
		<module>SpringService</module>
		<module>ZKDLComponents</module>
		<module>ZKDLComponentsHibernateExt</module>
		<module>DLHelpers</module>
		<module>Selenium</module>
		<module>ZKStatistics</module>
		<module>ZKLiferay</module>
		<module>DLBind</module>
	</modules>

	<repositories>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>jboss</id>
			<name>JBoss</name>
			<url>http://repository.jboss.com/maven2</url>
		</repository>

		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>zkoss</id>
			<name>ZK Repository</name>
			<url>http://mavensync.zkoss.org/maven2</url>
		</repository>

		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>Central Maven Repository</name>
			<url>http://repo2.maven.org/maven2</url>
		</repository>

	</repositories>

	<distributionManagement>
		<repository>
			<id>DataLite</id>
			<name>DataLite-releases</name>
			<url>http://zealot:8081/artifactory/libs-releases-local</url>
		</repository>

		<snapshotRepository>
			<id>DataLite</id>
			<name>DataLite-snapshots</name>
			<url>http://zealot:8081/artifactory/libs-snapshots-local</url>
		</snapshotRepository>
	</distributionManagement>

</project>
